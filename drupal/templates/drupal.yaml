apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    app: drupal
    release: {{ .Release.Name }}
spec:
  type: NodePort
  ports:
    - port: 80
  selector:
    app: drupal
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    app: drupal
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: drupal
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal
        release: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ .Values.nginx.image | quote }}
        name: nginx
        resources:
          requests:
            cpu: "50m"
        env:
        - name: NGINX_STATIC_CONTENT_OPEN_FILE_CACHE
          value: "off"
        - name: NGINX_ERROR_LOG_LEVEL
          value: debug
        - name: NGINX_BACKEND_HOST
          value: localhost
        - name: NGINX_SERVER_ROOT
          value: /var/www/html/web
        ports:
        - containerPort: 80
          name: drupal
        volumeMounts:
        - name: drupal-files-volume
          mountPath: /var/www/html/web/sites/default/files

      - name: drupal
        ports:
        - containerPort: 9000
          name: drupal
{{ include "drupal.drupal-container" . | indent 8 }}
        volumeMounts:
        - name: drupal-files-volume
          mountPath: /var/www/html/web/sites/default/files

      {{- if .Values.secrets.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.secrets.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      volumes:
{{ include "drupal.drupal-files-volume" . | indent 6 }}
